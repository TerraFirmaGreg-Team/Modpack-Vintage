# Configuration file

general {

    ##########################################################################################################
    # block
    #--------------------------------------------------------------------------------------------------------#
    # Block setting
    ##########################################################################################################

    block {

        ##########################################################################################################
        # bellows
        #--------------------------------------------------------------------------------------------------------#
        # Bellows
        ##########################################################################################################

        bellows {
            # The max number of air ticks, devices get a temperature bonus up to this amount. (1000 = 1 in game hour = 50 seconds), default is 600 ticks.
            # Min: 0
            # Max: 2147483647
            I:maxTicks=600

            # Amount of air ticks given to the connected devices. (1000 = 1 in game hour = 50 seconds), default is 200 ticks.
            # Min: 0
            # Max: 2147483647
            I:ticks=200
        }

        ##########################################################################################################
        # crucible
        #--------------------------------------------------------------------------------------------------------#
        # Crucible
        ##########################################################################################################

        crucible {
            # Let crucibles accept pouring metal (from small vessels / molds) from all 9 input slots at the same time.
            B:enableAllSlots=false

            # How fast should crucibles accept fluids from molds / small vessel?
            # Min: 1
            # Max: 2147483647
            I:pouringSpeed=1

            # How much metal (units / mB) can a crucible hold?
            # Min: 100
            # Max: 100000
            I:tank=3000
        }

        ##########################################################################################################
        # bloomery
        #--------------------------------------------------------------------------------------------------------#
        # Bloomery
        ##########################################################################################################

        bloomery {
            # Number of ticks required for a bloomery to complete. (1000 = 1 in game hour = 50 seconds), default is 15 hours.
            # Min: 20
            # Max: 2147483647
            I:ticks=15000

            # Time tooltip info mode.
            # Valid values:
            # NONE
            # TICKS
            # MINECRAFT_HOURS
            # REAL_MINUTES
            S:timeTooltipMode=MINECRAFT_HOURS
        }

        ##########################################################################################################
        # blast_furnace
        #--------------------------------------------------------------------------------------------------------#
        # Blast Furnace
        ##########################################################################################################

        blast_furnace {
            # How fast the blast furnace consume fuels (compared to the charcoal forge).
            # Example: Charcoal (without bellows) lasts for 1800 ticks in forge while 1800 / 4 = 450 ticks in blast furnace.
            # Min: 0.1
            # Max: 1.7976931348623157E308
            D:consumption=4.0
        }

        ##########################################################################################################
        # charcoal_pit
        #--------------------------------------------------------------------------------------------------------#
        # Charcoal Pit
        ##########################################################################################################

        charcoal_pit {
            # Can charcoal pits take glass (or stained glass) as a valid cover block?
            B:canAcceptGlass=true

            # Number of ticks required for charcoal pit to complete. (1000 = 1 in game hour = 50 seconds), default is 18 hours.
            I:ticks=18000
        }

        ##########################################################################################################
        # charcoal_forge
        #--------------------------------------------------------------------------------------------------------#
        # Charcoal Forge
        ##########################################################################################################

        charcoal_forge {
            # Number of burning ticks that is removed when the charcoal forge is on rain (random ticks).
            # This effectively makes the charcoal forge consumes more fuel when it is raining above it.
            # Min: 0
            # Max: 2147483647
            I:rainTicks=600
        }

        ##########################################################################################################
        # fire_pit
        #--------------------------------------------------------------------------------------------------------#
        # Fire Pit
        ##########################################################################################################

        fire_pit {
            # Number of burning ticks that is removed when the fire pit is on rain (random ticks).
            # This effectively makes the fire pit consumes more fuel when it is raining above it.
            # Min: 0
            # Max: 2147483647
            I:rainTicks=1000

            # Number of ticks required for a cooking pot on a fire pit to boil before turning into soup, per serving. (1000 = 1 in game hour = 50 seconds). Default is 1 hour.
            # Min: 20
            # Max: 2147483647
            I:ticks=1000
        }

        ##########################################################################################################
        # pit_kiln
        #--------------------------------------------------------------------------------------------------------#
        # Pit Kiln
        ##########################################################################################################

        pit_kiln {
            # Number of ticks required for a pit kiln to burn out. (1000 = 1 in game hour = 50 seconds), default is 8 hours.
            # Min: 20
            # Max: 2147483647
            I:ticks=8000

            # Time tooltip info mode.
            # Valid values:
            # NONE
            # TICKS
            # MINECRAFT_HOURS
            # REAL_MINUTES
            S:timeTooltipMode=MINECRAFT_HOURS
        }

        ##########################################################################################################
        # bear_trap
        #--------------------------------------------------------------------------------------------------------#
        # Bear Trap
        ##########################################################################################################

        bear_trap {
            # Percent chance for a bear trap to break when harvested after being activated (a predator breakout will attempt to break the trap with double this chance).
            # Min: 0.0
            # Max: 1.0
            D:breakChance=0.1

            # The chance a predator has to break out of a bear trap each tick.
            # 0 = no breakouts. If this number isn't kept very small then breakouts will happen very fast. 1 = instant breakout.
            # Min: 0.0
            # Max: 1.0
            D:breakoutChance=0.001

            # The duration of the debuffs applied by the bear trap in ticks.
            # Set to 0 to disable the debuffs.
            # Min: 0
            # Max: 2147483647
            I:debuffDuration=1000

            # The amount of damage points dealt by a bear trap.
            # This will override the fractional health cut setting if set to a value greater than 0
            # Min: 0.0
            # Max: 1.7976931348623157E308
            D:fixedDamage=0.0

            # The fraction of an entity's health that is dealt as damage when stepping in a trap.
            # E.g. 3 = 1/3 current health dealt as damage. Less than 1 will deal more damage than current health, probably an instakill. Set to 0 to do no damage.
            # Min: 0.0
            # Max: 20.0
            D:healthCut=3.0
        }

        ##########################################################################################################
        # snare
        #--------------------------------------------------------------------------------------------------------#
        # Snare
        ##########################################################################################################

        snare {
            # The chance for a snare to capture a random small animal when loaded with bait. Happens on random block ticks.
            # Min: 0.0
            # Max: 1.0
            D:baitCaptureChance=0.05

            # The chance for a piece of bait in a snare to be consumed if the snare fails to capture a random animal.
            # Min: 0.0
            # Max: 1.0
            D:baitExpireChance=0.05

            # Percent chance for a snare to break when harvested after being tripped.
            # Min: 0.0
            # Max: 1.0
            D:breakChance=0.2
        }

        ##########################################################################################################
        # anvil
        #--------------------------------------------------------------------------------------------------------#
        # Anvil
        ##########################################################################################################

        anvil {
            # Range of pixels on either side of the working target that can be accepted to complete a smithing recipe
            # Min: 0
            # Max: 2147483647
            I:acceptableAnvilRange=0
        }

        ##########################################################################################################
        # oven
        #--------------------------------------------------------------------------------------------------------#
        # Oven
        ##########################################################################################################

        oven {
            # Time tooltip info mode.
            # Valid values:
            # NONE
            # TICKS
            # MINECRAFT_HOURS
            # REAL_MINUTES
            S:timeTooltipMode=MINECRAFT_HOURS
        }

        ##########################################################################################################
        # freeze_dryer
        #--------------------------------------------------------------------------------------------------------#
        # Freeze Dryer
        ##########################################################################################################

        freeze_dryer {
            # The multiplier 100 is 1.0, 123 is 1.23	:	Is used to effect the coolant consumption rate of the cellars
            D:coolantConsumptionMultiplier=1.0

            # Maximum amount of coolant freeze dryer can store internally.
            D:coolantMax=6400.0

            # 1000 is 1.00, 1230 is 1.23\t:\tHeat generated per redstone power level
            D:heatPerPower=0.10000000149011612

            # This setting dictates how much coolant you get from a block of Ice or Ice Shards
            I:iceCoolant=120

            # Maximum temperature of freeze dryer vacuum pump
            I:maxTemp=40

            # This setting dictates how much coolant you get from a block of Packed Ice
            I:packedIceCoolant=60

            # 1000 is 1.00, 1230 is 1.23\t:\tPressure change per Y level
            D:pressureChange=1.9800000190734863

            # This setting dictates how much coolant you get from a block of Sea Ice
            I:seaIceCoolant=180

            # This is the sea level pressure.
            D:seaLevelPressure=1016.0

            # Number of seconds at target pressure to preserve.
            I:sealedDuration=120

            # This setting dictates how much coolant you get from a block of Snowball
            I:snowBallCoolant=15

            # This setting dictates how much coolant you get from a block of Snow
            I:snowCoolant=60

            # 1000 is 1.00, 1230 is 1.23	:	Target pressure to achieve to start preserving
            D:targetPressure=0.6000000238418579

            # 1000 is 10.0, 1230 is 12.3	:	Percentage of Temperature Delta in heat dissipated per second
            D:temperatureDissipation=0.20000000298023224

            # Work per redstone power level each second
            D:workPerPower=100.0
        }

        ##########################################################################################################
        # ice_bunker
        #--------------------------------------------------------------------------------------------------------#
        # Ice Bunker
        ##########################################################################################################

        ice_bunker {
            # The multiplier 100 is 1.0, 123 is 1.23	:	Is used to effect the coolant consumption rate of the cellars
            D:coolantConsumptionMultiplier=1.0

            # Will enable all debug text.
            B:debug=false

            # This setting dictates how much coolant you get from a block of Ice or Ice Shards
            I:iceCoolant=120

            # Is the minimum value the ice house can make it with out negative temperatures outside. Special Ice Traits do not take this into account.
            I:iceHouseTemperature=1

            # This setting dictates how much coolant you get from a block of Packed Ice
            I:packedIceCoolant=60

            # This setting dictates how much coolant you get from a block of Sea Ice
            I:seaIceCoolant=180

            # This setting dictates how much coolant you get from a block of Snowball
            I:snowBallCoolant=15

            # This setting dictates how much coolant you get from a block of Snow
            I:snowCoolant=60

            # Makes using sea ice and packed ice effect temperature of the cellars.
            B:specialIceTraits=false

            # This will cause the temperature calculation, for cellars, to be based on the average temperature of the month. Instead of actual current temperature
            B:tempMonthAvg=false
        }

        ##########################################################################################################
        # cellar_shelf
        #--------------------------------------------------------------------------------------------------------#
        # Cellar Shelf
        ##########################################################################################################

        cellar_shelf {
            # This is the temperature at which foods will gain a trait.
            I:coolMaxThreshold=20

            # This is the temperature at which foods will go from icy to frozen.
            I:frozenMaxThreshold=0

            # This is the temperature at which foods will go from cool to icy.
            I:icyMaxThreshold=5
        }

    }

    ##########################################################################################################
    # item
    #--------------------------------------------------------------------------------------------------------#
    # Item setting
    ##########################################################################################################

    item {

        ##########################################################################################################
        # water_flasks
        #--------------------------------------------------------------------------------------------------------#
        # Water Flasks
        ##########################################################################################################

        water_flasks {
            # Damage Capability of Flasks are Capacity/(this value) 0 = MAXINT uses
            # Min: 0
            # Max: 2147483647
            I:damageFactor=5

            # Liquid Capacity of Iron Flask (1000 = 1 bucket = 10 drinks or 4 water bars)
            # Min: 100
            # Max: 2147483647
            I:ironCap=2000

            # Liquid Capacity of Leather Flask (500 = 1/2 bucket = 5 drinks or 2 water bars)
            # Min: 100
            # Max: 2147483647
            I:leatherCap=500
        }

        ##########################################################################################################
        # sling
        #--------------------------------------------------------------------------------------------------------#
        # Sling
        ##########################################################################################################

        sling {
            # The speed at which the sling charges.
            # Value represents number of ticks per power level (lower = faster).
            # Min: 1
            # Max: 2147483647
            I:chargeSpeed=16

            # The maximum power a sling can be charged up to.
            # A fully charged sling will deal damage equal to maximum power, but projectile speed is fixed to the ratio: current power / max power.
            # Min: 1
            # Max: 2147483647
            I:maxPower=8

            # Damage multiplier against predator animals and skeletons.
            # New damage = sling damage * multiplier
            # Min: 1.0
            # Max: 10.0
            D:predatorMultiplier=2.0
        }

        ##########################################################################################################
        # fire_starter
        #--------------------------------------------------------------------------------------------------------#
        # Fire starter
        ##########################################################################################################

        fire_starter {
            # Chance for the fire starter to be successful. Default = 0.5
            # Min: 0.0
            # Max: 1.0
            D:chance=0.5
        }

    }

    ##########################################################################################################
    # entity
    #--------------------------------------------------------------------------------------------------------#
    # Entity setting
    ##########################################################################################################

    entity {
    }

    ##########################################################################################################
    # misc
    #--------------------------------------------------------------------------------------------------------#
    # Misc setting
    ##########################################################################################################

    misc {

        debug {
            B:"Debug Mode"=true
        }

    }

}


