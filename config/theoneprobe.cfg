# Configuration file

##########################################################################################################
# client
#--------------------------------------------------------------------------------------------------------#
# Client-side settings
##########################################################################################################

client {
    S:blockNameMaxWidth=0.0

    # Color of the border of the box (0 to disable) [default: ff999999]
    S:boxBorderColor=ff323331

    # The distance to the bottom side of the screen. Use -1 if you don't want to set this [range: -1 ~ 10000, default: -1]
    I:boxBottomY=-1

    # Color of the box (0 to disable) [default: 55006699]
    S:boxFillColor=90000000

    # The distance to the left side of the screen. Use -1 if you don't want to set this [range: -1 ~ 10000, default: 5]
    I:boxLeftX=5

    # How much the border should be offset (i.e. to create an 'outer' border) [range: 0 ~ 20, default: 0]
    I:boxOffset=0

    # The distance to the right side of the screen. Use -1 if you don't want to set this [range: -1 ~ 10000, default: -1]
    I:boxRightX=-1

    # Thickness of the border of the box (0 to disable) [range: 0 ~ 20, default: 2]
    I:boxThickness=1

    # The distance to the top side of the screen. Use -1 if you don't want to set this [range: -1 ~ 10000, default: 5]
    I:boxTopY=5

    # Color of the border of the chest contents box (0 to disable) [default: ff006699]
    S:chestContentsBorderColor=90b20000

    # If true equal stacks will be compacted in the chest contents overlay [default: true]
    B:compactEqualStacks=true

    # If true the probe will automatically show extended information if it is in your main hand (so not required to sneak) [default: false]
    B:extendedInMain=true
    S:harvestLevels <
        theoneprobe.harvestlevel.stone
        theoneprobe.harvestlevel.iron
        theoneprobe.harvestlevel.diamond
        theoneprobe.harvestlevel.obsidian
        theoneprobe.harvestlevel.cobalt
        theoneprobe.harvestlevel.duranite
        theoneprobe.harvestlevel.valyrium
        theoneprobe.harvestlevel.vibranium
     >

    # true means shows harvestability with vanilla style icons [default: true]
    B:harvestStyleVanilla=true

    # If true then the probe hotkey must be held down to show the tooltip [default: false]
    B:holdKeyToMakeVisible=false

    # Toggle default probe visibility (client can override) [default: true]
    B:isVisible=true
    S:probeButtonColor=ff000000

    # true means that the probeDistance option will take effect for entity [default: false]
    B:probeEntityDistance=false
    S:probeProgressAltColor=ff550000
    S:probeProgressBackgroundColor=ff000000
    S:probeProgressBorderColor=0
    S:probeProgressColor=ff990000
    B:probeProgressGradient=false

    # 0 means don't show break progress, 1 is show as bar, 2 is show as text [range: 0 ~ 2, default: 1]
    I:showBreakProgress=1

    # true means shows Custom harvestLevel (you can chance name in the lang) [default: false]
    B:showCustomharvestLevelName=false

    # true means shows entity armor value [default: true]
    B:showEntityArmor=true

    # true means shows entity health [default: true]
    B:showEntityHealth=true

    # true means shows entity info [default: true]
    B:showEntityInfo=true

    # true means shows entity model [default: true]
    B:showEntityModel=true

    # If true show liquid information when the probe hits liquid first [default: false]
    B:showLiquids=false

    # true means shows villager career [default: true]
    B:showVillagerCareer=true

    # true means shows villager career level [default: true]
    B:showVillagerCareerLevel=true

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: red,bold]
    S:textStyleError=red,bold

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: white]
    S:textStyleInfo=white

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: blue]
    S:textStyleInfoImportant=blue

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: gray]
    S:textStyleLabel=gray

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: blue,italic]
    S:textStyleModName=blue,italic

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: white]
    S:textStyleName=white

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: gray,strikethrough]
    S:textStyleObsolete=gray,strikethrough

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: green]
    S:textStyleOk=green

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: white]
    S:textStyleProgress=white

    # Text style. Use a comma delimited list with colors like: 'red', 'green', 'blue', ... or style codes like 'underline', 'bold', 'italic', 'strikethrough', ... [default: yellow]
    S:textStyleWarning=yellow

    # The scale of the tooltips, 1 is default, 2 is smaller [range: 0.4 ~ 5.0, default: 1.0]
    S:tooltipScale=1.0

    client_offsets {
        I:boxBottomYOffset=-1
        I:boxLeftXOffset=0
        I:boxRightXOffset=-1
        I:boxTopYOffset=0
    }

    client_text {
        S:textStyleError=red,bold
        S:textStyleInfo=white
        S:textStyleInfoImportant=blue
        S:textStyleLabel=gray
        S:textStyleModName=blue,italic
        S:textStyleName=white
        S:textStyleObsolete=gray,strikethrough
        S:textStyleOk=green
        S:textStyleProgress=white
        S:textStyleWarning=yellow
    }

}


##########################################################################################################
# providers
#--------------------------------------------------------------------------------------------------------#
# Provider configuration
##########################################################################################################

providers {
    # Entity providers that should be excluded [default: ]
    S:excludedEntityProviders <
     >

    # Providers that should be excluded [default: ]
    S:excludedProviders <
     >

    # Order in which entity providers should be used [default: [theoneprobe:entity.default], [theoneprobe:entity.debug], [theoneprobe:entity.entity], [top.tfg.animal.gender], [topalldependents:base], [topalldependents:architecturecraft], [topalldependents:chisel], [topalldependents:opencomputers], [topalldependents:vanilla]]
    S:sortedEntityProviders <
        theoneprobe:entity.default
        theoneprobe:entity.debug
        theoneprobe:entity.entity
        theoneprobe:chest_horse_provider
        theoneprobe:minecart_provider
        theoneprobe:tnt_provider
        theoneprobe:painting_provider
        top.tfc.net.dries007.tfc.compat.waila.providers.AnimalProvider
     >

    # Order in which providers should be used [default: [theoneprobe:default], [theoneprobe:debug], [theoneprobe:block], [gregicprobe:recipe_info], [gregicprobe:cable_info], [ae2stuff:InfoProvider], [topce.crt], [gregtech:energy_container_provider], [gregtech:workable_provider], [gregtech:controllable_provider], [gregtech:transformer_info_provider], [gregtech:diode_info_provider], [gregtech:multiblock_controller_provider], [gregtech:multiblock_maintenance_provider], [gregtech:multi_recipemap_provider], [gregtech:converter_info_provider], [gregtech:recipe_logic_provider], [gregtech:steam_boiler_provider], [gregtech:primitive_pump_provider], [gregtech:coverable_provider], [gregtech:ore_block_provider], [gregtech:lamp_info_provider], [gregtech:ld_pipe_provider], [gregtech:laser_container_provider], [gregtech:debug_pipe_net_provider], [gregtech:debug_tick_time_provider], [gtqt:face], [gtqt:cable], [gtqt:temperature], [gtqt:getparallelLimit], [gtqt:recipe_info_item_output], [gtqt:recipe_info_fluid_output], [gtqt:cleanroom], [gtqt:power_station], [gtqt:computation], [top.tfg.device.latex_extractor], [top.tfg.device.pit_kiln], [top.tfg.device.crucible], [top.tfg.device.blast_furnace], [top.tfg.device.bloomery], [appliedenergistics2:TileInfoProvider], [appliedenergistics2:PartInfoProvider], [topalldependents:base], [topalldependents:architecturecraft], [topalldependents:chisel], [topalldependents:opencomputers], [topalldependents:vanilla], [top.tfc.net.dries007.tfc.compat.waila.providers.BarrelProvider], [top.tfc.net.dries007.tfc.compat.waila.providers.BerryBushProvider], [top.tfc.net.dries007.tfc.compat.waila.providers.LampProvider], [top.tfc.net.dries007.tfc.compat.waila.providers.CropProvider], [top.tfc.net.dries007.tfc.compat.waila.providers.FruitTreeProvider], [top.tfc.net.dries007.tfc.compat.waila.providers.OreProvider], [top.tfc.net.dries007.tfc.compat.waila.providers.PlacedItemProvider], [top.tfc.net.dries007.tfc.compat.waila.providers.InfoProvider], [top.tfc.net.dries007.tfc.compat.waila.providers.TreeProvider], [top.tfc.net.dries007.tfc.compat.waila.providers.IngotPileProvider], [top.tfc.net.dries007.tfc.compat.waila.providers.LogPileProvider], [top.tfc.net.dries007.tfc.compat.waila.providers.QuernProvider]]
    S:sortedProviders <
        theoneprobe:default
        theoneprobe:debug
        theoneprobe:block
        theoneprobe:enchanting_power_provider
        theoneprobe:jukebox_provider
        ae2stuff:InfoProvider
        gregtech:energy_container_provider
        gregtech:workable_provider
        gregtech:controllable_provider
        gregtech:transformer_info_provider
        gregtech:diode_info_provider
        gregtech:multiblock_controller_provider
        gregtech:multiblock_maintenance_provider
        gregtech:multi_recipemap_provider
        gregtech:converter_info_provider
        gregtech:recipe_logic_provider
        gregtech:steam_boiler_provider
        gregtech:primitive_pump_provider
        gregtech:coverable_provider
        gregtech:ore_block_provider
        gregtech:lamp_info_provider
        gregtech:ld_pipe_provider
        gregtech:laser_container_provider
        gregtech:debug_pipe_net_provider
        gregtech:debug_tick_time_provider
        gregicprobe:recipe_info_item_output
        gregicprobe:recipe_info_fluid_output
        gregicprobe:cable_info
        gtqt:face
        gtqt:cable
        gtqt:temperature
        gtqt:getparallelLimit
        gtqt:recipe_info_item_output
        gtqt:recipe_info_fluid_output
        gtqt:cleanroom
        gtqt:power_station
        gtqt:computation
        appliedenergistics2:TileInfoProvider
        appliedenergistics2:PartInfoProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.BarrelProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.BerryBushProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.BlastFurnaceProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.BloomeryProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.LampProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.CropProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.CrucibleProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.FruitTreeProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.OreProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.PitKilnProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.PlacedItemProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.InfoProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.TreeProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.IngotPileProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.LogPileProvider
        top.tfc.net.dries007.tfc.compat.waila.providers.QuernProvider
        tfctech:top_provider
     >
}


##########################################################################################################
# theoneprobe
#--------------------------------------------------------------------------------------------------------#
# The One Probe configuration
##########################################################################################################

theoneprobe {
    # If true equal stacks will be compacted in the chest contents overlay [default: true]
    B:compactEqualStacks=true

    # A list of blocks for which we don't send NBT over the network. This is mostly useful for blocks that have HUGE NBT in their pickblock (itemstack) [default: ]
    S:dontSendNBT <
     >

    # A list of blocks for which we don't show chest contents automatically except if sneaking [default: ]
    S:dontShowContentsUnlessSneaking <
     >

    # If true the probe will automatically show extended information if it is in your main hand (so not required to sneak) [default: false]
    B:extendedInMain=false

    # How much time (ms) to wait before reporting an exception again [range: 1 ~ 10000000, default: 20000]
    I:loggingThrowableTimeout=20000

    # The maximum packet size to send an itemstack from client to server. Reduce this if you have issues with network lag caused by TOP [range: -1 ~ 32768, default: 20000]
    I:maxPacketToServer=20000

    # Is the probe needed to show the tooltip? 0 = no, 1 = yes, 2 = yes and clients cannot override, 3 = probe needed for extended info only [range: 0 ~ 3, default: 3]
    I:needsProbe=3

    # Distance at which the probe works [range: 0.1 ~ 200.0, default: 6.0]
    S:probeDistance=6.0
    S:probeNoteBlock=minecraft:log
    I:probeNoteStackSize=1

    # Format for displaying RF: 0 = full, 1 = compact, 2 = comma separated [range: 0 ~ 2, default: 1]
    I:rfFormat=1

    # Alternate color for the RF bar [default: ff430000]
    S:rfbarAlternateFilledColor=ff430000

    # Color for the RF bar border [default: ff555555]
    S:rfbarBorderColor=ff555555

    # Color for the RF bar [default: ffdd0000]
    S:rfbarFilledColor=ffdd0000

    # Show animal owner setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
    I:showAnimalOwnerSetting=2

    # Show brewing stand setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showBrewStandSetting=1

    # Show if the block can be harvested (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showCanBeHarvested=1

    # Show chest contents (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
    I:showChestContents=2

    # Show chest contents in detail (0 = not, 1 = always, 2 = sneak), used only if number of items is below 'showItemDetailThresshold' [range: 0 ~ 2, default: 2]
    I:showChestContentsDetailed=2

    # If true show the color of the collar of a wolf [default: true]
    B:showCollarColor=true

    # A list of blocks for which we automatically show chest contents even if not sneaking [default: [storagedrawers:basicDrawers], [storagedrawersextra:extra_drawers]]
    S:showContentsWithoutSneaking <
        storagedrawers:basicDrawers
        storagedrawersextra:extra_drawers
     >

    # Show the growth level of crops (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showCropPercentage=1

    # If true show debug info with creative probe [default: true]
    B:showDebugInfo=true

    # Show harvest level (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showHarvestLevel=1

    # Show horse stats setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
    I:showHorseStatSetting=2

    # If the number of items in an inventory is lower or equal then this number then more info is shown [range: 0 ~ 20, default: 4]
    I:showItemDetailThresshold=4

    # Show lever/comparator/repeater settings (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showLeverSetting=1

    # Show time to adulthood for baby mobs (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showMobGrowth=1

    # Show mob health (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showMobHealth=1

    # Show mob potion effects (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
    I:showMobPotionEffects=2

    # Show mob spawner setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showMobSpawnerSetting=1

    # Show mod name (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showModName=1

    # How to display RF: 0 = do not show, 1 = show in a bar, 2 = show as text [range: 0 ~ 2, default: 1]
    I:showRF=1

    # Show redstone (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 1]
    I:showRedstone=1

    # Reveal monster eggs (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 0]
    I:showSilverfish=0

    # The maximum amount of slots (empty or not) to show without sneaking [range: 0 ~ 1000, default: 0]
    I:showSmallChestContentsWithoutSneaking=0

    # How to display tank contents: 0 = do not show, 1 = show in a bar, 2 = show as text [range: 0 ~ 2, default: 1]
    I:showTank=1

    # Show tank setting (0 = not, 1 = always, 2 = sneak) [range: 0 ~ 2, default: 2]
    I:showTankSetting=2

    # If true there will be a readme note for first-time players [default: true]
    B:spawnNote=false

    # If true there will be a bauble version of the probe if baubles is present [default: true]
    B:supportBaubles=true

    # Format for displaying tank contents: 0 = full, 1 = compact, 2 = comma separated [range: 0 ~ 2, default: 1]
    I:tankFormat=1

    # Alternate color for the tank bar [default: ff000043]
    S:tankbarAlternateFilledColor=ff000043

    # Color for the tank bar border [default: ff555555]
    S:tankbarBorderColor=ff555555

    # Color for the tank bar [default: ff0000dd]
    S:tankbarFilledColor=ff0000dd

    # The amount of milliseconds to wait before updating probe information from the server (this is a client-side config) [range: 10 ~ 100000, default: 300]
    I:timeout=300

    # The amount of milliseconds to wait before showing a 'fetch from server' info on the client (if the server is slow to respond) (-1 to disable this feature) [range: -1 ~ 100000, default: 2000]
    I:waitingForServerTimeout=2000

    theoneprobe_show {
        I:showAnimalOwnerSetting=2
        B:showBreakProgressText=true
        I:showBrewStandSetting=1
        I:showCanBeHarvested=1
        I:showChestContents=2
        I:showChestContentsDetailed=2
        B:showCollarColor=true
        S:showContentsWithoutSneaking <
            storagedrawers:basicDrawers
            storagedrawersextra:extra_drawers
         >
        I:showCropPercentage=1
        B:showDebugInfo=true
        B:showDebugUUID=false
        I:showHarvestLevel=1
        I:showHorseStatSetting=2
        I:showItemDetailThresshold=4
        I:showLeverSetting=1
        I:showMobGrowth=1
        I:showMobHealth=1
        I:showMobPotionEffects=2
        I:showMobSpawnerSetting=1
        I:showModName=1
        B:showProbeConfigGUI=true
        B:showProbeNoteGUI=true
        I:showRF=1
        I:showRedstone=1
        I:showSilverfish=0
        I:showSmallChestContentsWithoutSneaking=0
        I:showTank=1
        I:showTankSetting=2
    }

}


